{"version":3,"sources":["components/WeatherInfo.js","components/WeatherForm.js","components/WeatherDisplay.js","App.js","index.js"],"names":["API_KEY","process","WeatherInfo","state","weatherData","getApiInformation","location","a","fetch","response","json","console","log","setState","d","Date","day","getDate","month","getMonth","year","getFullYear","this","props","inLocation","searchLocation","className","main","Math","round","temp","name","sys","country","temp_min","temp_max","weather","currentDate","cod","onClick","onDelete","Component","WeatherForm","handleChange","event","target","value","handleSubmit","preventDefault","trim","onSubmit","id","shortid","generate","alert","onChange","placeholder","autoComplete","type","onCancel","weatherDisplay","display","displayWeather","displayForm","addLocation","handleDelete","filter","length","map","key","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.07a91cd7.chunk.js","sourcesContent":["import './WeatherInfo.css'\r\nimport React, { Component } from 'react'\r\n\r\nconst API_KEY = process.env.REACT_APP_WEATHER_KEY;\r\n\r\nexport default class WeatherInfo extends Component {\r\n\r\n    state = ({\r\n        weatherData: {}\r\n    })\r\n\r\n    currentDate() {\r\n        const d = new Date();\r\n        const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\r\n        let day = d.getDate();\r\n        let month = d.getMonth();\r\n        let year = d.getFullYear();\r\n        return (day + \" \" + months[month] + \" \" + year);\r\n    }\r\n\r\n    getApiInformation = async (location) => {\r\n        const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${location}&appid=${API_KEY}&units=metric`);\r\n        const json = await response.json();\r\n        console.log(json);\r\n        this.setState({\r\n            weatherData: json\r\n        })\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            await this.getApiInformation(this.props.inLocation.searchLocation);\r\n        } catch (err) {\r\n            console.log(`Cannot GET API.`, err)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={typeof this.state.weatherData.main == \"undefined\" ? 'weather-info-container-0' :\r\n                Math.round(this.state.weatherData.main.temp <= 0) ? 'weather-info-container-0' :\r\n                    Math.round(this.state.weatherData.main.temp) > 0 && Math.round(this.state.weatherData.main.temp) <= 20 ? 'weather-info-container-0-20' :\r\n                        Math.round(this.state.weatherData.main.temp) > 20 ? 'weather-info-container-20' : 'weather-info-container-0'}>\r\n\r\n                {(typeof this.state.weatherData.main != \"undefined\") ? (\r\n                    <div className=\"text-container\">\r\n                        <div className=\"location\">{this.state.weatherData.name}, {this.state.weatherData.sys.country}</div>\r\n                        <div className=\"main-temp\">{Math.round(this.state.weatherData.main.temp)}°C</div>\r\n                        <div className=\"sub-temp\">Min: {Math.round(this.state.weatherData.main.temp_min)}°C, Max: {Math.round(this.state.weatherData.main.temp_max)}°C</div>\r\n                        <div>{this.state.weatherData.weather[0].main}</div>\r\n                        <div>{this.currentDate()}</div>\r\n                    </div>)\r\n                    : (this.state.weatherData.cod === \"404\") ? (\r\n                        <div className=\"error-container\">\r\n                            <div>Invalid location: {this.props.inLocation.searchLocation}</div>\r\n                        </div>\r\n                    )\r\n                        : <div>Loading...</div>\r\n                }\r\n                <button\r\n                    onClick={this.props.onDelete}\r\n                    className=\"delete-button\">Delete</button>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport shortid from 'shortid'\r\nimport './WeatherForm.css'\r\n\r\nexport default class WeatherForm extends Component {\r\n    state = ({\r\n        searchLocation: \"\"\r\n    })\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            searchLocation: event.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        (this.state.searchLocation.trim() !== \"\") ?\r\n            (this.props.onSubmit({\r\n                searchLocation: this.state.searchLocation,\r\n                id: shortid.generate()\r\n            }))\r\n            : (alert(\"Invalid Input\"))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"form-container\">\r\n                <form onSubmit={this.handleSubmit}>\r\n\r\n                    <div className=\"search-bar-container\">\r\n                        <input\r\n                            value={this.state.searchLocation}\r\n                            name=\"searchLocation\"\r\n                            onChange={this.handleChange}\r\n                            placeholder=\"Location...\"\r\n                            autoComplete=\"off\"\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"buttons-container\">\r\n                        <button type=\"button\" className=\"cancel-button\" onClick={this.props.onCancel}>Cancel</button>\r\n\r\n                        <button type=\"submit\" className=\"search-button\" onClick={this.handleSubmit}>Search</button>\r\n                    </div>\r\n\r\n\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './WeatherDisplay.css';\r\nimport WeatherInfo from \"./WeatherInfo\";\r\nimport WeatherForm from './WeatherForm';\r\n\r\nexport default class weatherDisplay extends Component {\r\n    state = ({\r\n        weather: [],\r\n        display: 'weather'\r\n    });\r\n\r\n    displayWeather = () => {\r\n        this.setState({\r\n            display: 'weather'\r\n        });\r\n    };\r\n\r\n    displayForm = () => {\r\n        this.setState({\r\n            display: 'form'\r\n        });\r\n    };\r\n\r\n    addLocation = (location) => {\r\n        this.setState({\r\n            weather: [...this.state.weather, location]\r\n        });\r\n        this.displayWeather();\r\n    };\r\n\r\n    handleDelete = (id) => {\r\n        this.setState({\r\n            weather: this.state.weather.filter(location => location.id !== id)\r\n        });\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"display\">\r\n                {(this.state.display === \"weather\" && this.state.weather.length < 1) ?\r\n                    <div className=\"add-new-container\">\r\n                        <button className=\"add-new-button\" onClick={this.displayForm}>Add New</button>\r\n                    </div>\r\n                    : (this.state.display === \"weather\") ?\r\n                        <div>\r\n                            <div className=\"weather-box-container\">\r\n\r\n                                {this.state.weather.map(inLocation =>\r\n                                    (<WeatherInfo\r\n                                        key={inLocation.id}\r\n                                        inLocation={inLocation}\r\n                                        onDelete={() => this.handleDelete(inLocation.id)}\r\n                                    />))}\r\n                                <button className=\"add-new-button\" onClick={this.displayForm}>Add New</button>\r\n                            </div>\r\n                        </div>\r\n                        : <div>\r\n                            <WeatherForm\r\n                                onCancel={() => this.displayWeather()}\r\n                                onSubmit={this.addLocation}\r\n                            />\r\n                        </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\nimport './App.css';\nimport WeatherDisplay from \"./components/WeatherDisplay\";\n\nclass App extends Component {\n\n  \n  render() {\n    return (\n      <div className=\"App\">\n      <WeatherDisplay/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}